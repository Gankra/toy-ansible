---
# ============= Repository Setup Stuff =======================================

- name: Add repository for java
  apt_repository: 
      repo = 'ppa:webupd8team/java'
    
- name: Trust Elastic's key
  apt_key:
      url=https://packages.elasticsearch.org/GPG-KEY-elasticsearch

- name: Add Elastic to sources list
  apt_repository:
      repo='deb http://packages.elasticsearch.org/elasticsearch/1.4/debian stable main'

- name: Add Logstash to sources list
  apt_repository:
      repo='deb http://packages.elasticsearch.org/logstash/1.5/debian stable main'

- name: update and upgrade
  apt: 
      update_cache=yes
      upgrade=full

- name: Install Oracle Java 8
  apt: 
      pkg=oracle-java8-installer
 
- name: Install elasticsearch
  apt:
      pkg=elasticsearch

- name: Install logstash
  apt: 
      pkg=logstash

# =========== Elasticsearch Config Stuff =====================================

- name: Give Elasticsearch a config file
  file:
      path= #TODO
      
- name: Start Elasticsearch service
  # TODO sudo service elasticsearch restart

- name: Tell Elasticsearch to start on boot
  # TODO sudo update-rc.d elasticsearch defaults 95 10

# ============= Kibana Stuff ================================================= 

- name: Grab Kibana tarball
  # TODO wget
  # https://download.elasticsearch.org/kibana/kibana/kibana-4.0.1-linux-x64.tar.gz
  #  into homedir

- name: Extract Kibana
  # TODO tar xvf kibana-*.tar.gz
  # EXTRACT INTO /OPT/KIBANA


- name: Put Kibana config 
  # TODO vi /opt/kibana/config/kibana.yml

- name: Run Kibana
  # TODO /opt/kibana/bin/kibana
  # https://www.elastic.co/guide/en/kibana/current/setup.html#install

  
# ============== Logstash ====================================================

- name:  








- name: Install Packages 
  apt:
      pkg=openjdk-7-jdk
      state=latest
- name: Install or update openssl
  apt:
      pkg=openssl
      state=latest
- name: Create /etc/nginx/ssl directory
  file:
      path=/etc/nginx/ssl
      state=directory
      owner={{ ansible_ssh_user }}
      group={{ ansible_ssh_user }}
- name: Create a 2048-bit dhparams.pem key if it doesn't exist
  command: openssl dhparam -out dhparams.pem 2048
  args:
      chdir: /etc/nginx/ssl
      creates: /etc/nginx/ssl/dhparams.pem
- name: Update /etc/nginx/sites-enabled/default to be more secure
  copy:
      src=sites-enabled/default
      dest=/etc/nginx/sites-enabled/default
      owner={{ ansible_ssh_user }}
      group={{ ansible_ssh_user }}
- name: Create a SSL cert if it doesn't exist
  command: >
         openssl req
         -new 
         -nodes 
         -x509 
         -subj "/C=US/ST=Oregon/L=Portland/O=IT/CN=play.edunham.net" 
         -days 3650 
         -keyout /etc/nginx/ssl/server.key
  args:
      creates: /etc/nginx/ssl/nginx.key
      creates: /etc/nginx/ssl/nginx.crt
- name: Copy nginx config files
  copy: 
      src=conf.d/{{ item }}
      dest=/etc/nginx/conf.d/{{ item }}
  with_items:
      - github-proxy
      - rust-lang-org-ssl
      - s3-bucket-proxy
- name: Start nginx service
  service:
      name=nginx
      state=reloaded
